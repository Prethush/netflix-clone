{"version":3,"sources":["components/axios.js","components/Row.js","request.js","components/Banner.js","components/Nav.js","components/App.js","index.js"],"names":["instance","axios","create","baseURL","baseUrl","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","className","map","movie","onClick","movieTrailer","name","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","handleClick","src","poster_path","backdrop_path","alt","id","videoId","opts","height","width","playerVars","autoplay","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","ReactDOM","render","document","getElementById"],"mappings":"0PAOeA,E,OAJEC,EAAMC,OAAO,CAC5BC,QAAS,iC,wCCELC,EAAU,uCAyDDC,MAvDf,YAA6C,IAA/BC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,WAC7B,EAA0BC,mBAAS,IAAnC,mBAAKC,EAAL,KAAaC,EAAb,KACA,EAAkCF,qBAAlC,mBAAKG,EAAL,KAAiBC,EAAjB,KAkCA,OA/BAC,qBAAU,WAAM,4CACd,4BAAAC,EAAA,sEACwBd,EAAMe,IAAIT,GADlC,cACQU,EADR,OAEEN,EAAUM,EAAQC,KAAKC,SAFzB,kBAGSF,GAHT,4CADc,uBAAC,WAAD,wBAMdG,KACC,CAACb,IAyBF,sBAAKc,UAAU,MAAf,UACE,6BAAKf,IACL,qBAAKe,UAAU,cAAf,SAGIX,EAAOY,KAAI,SAACC,GACZ,OAAO,qBAEPC,QAAS,kBAtBG,SAACD,GAChBX,EACDC,GAAc,GAEdY,KAAkB,OAALF,QAAK,IAALA,OAAA,EAAAA,EAAOG,QAAP,OAAeH,QAAf,IAAeA,OAAf,EAAeA,EAAOjB,QAAS,IAC3CqB,MAAK,SAACC,GACL,IAAMC,EAAY,IAAIC,gBAAgB,IAAIC,IAAIH,GAAKI,QACnDnB,EAAcgB,EAAUb,IAAI,SAE7BiB,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,MAaXG,CAAYd,IAC3BF,UAAS,qBAAgBb,GAAc,mBAAqB8B,IAAM9B,EAA2CJ,EAAQmB,EAAMgB,YAA5CnC,EAAQmB,EAAMiB,cAA2CC,IAAKlB,EAAMjB,OAASiB,EAAMG,MAF7JH,EAAMmB,SAMd9B,GAAc,cAAE,IAAF,CAAU+B,QAAS/B,EAAYgC,KApCrC,CACXC,OAAQ,MACRC,MAAO,OACPC,WAAY,CAEVC,SAAU,UC3BVC,EAAU,mCAaDC,EAXE,CACfC,cAAc,8BAAD,OAAgCF,EAAhC,mBACbG,sBAAsB,wBAAD,OAA0BH,EAA1B,qBACrBI,cAAc,4BAAD,OAA8BJ,EAA9B,mBACbK,kBAAkB,2BAAD,OAA6BL,EAA7B,mBACjBM,kBAAkB,2BAAD,OAA6BN,EAA7B,mBACjBO,kBAAkB,2BAAD,OAA6BP,EAA7B,mBACjBQ,mBAAmB,2BAAD,OAA6BR,EAA7B,sBAClBS,mBAAmB,2BAAD,OAA6BT,EAA7B,oB,YCsCLU,MAzCf,WACE,IAakBC,EAAKC,EAbvB,EAAwBpD,mBAAS,IAAjC,mBAAKc,EAAL,KAAYuC,EAAZ,KAiBA,OAfAhD,qBAAU,WAAM,4CACd,4BAAAC,EAAA,sEACwBd,EAAMe,IAAIkC,EAASE,uBAD3C,OACQnC,EADR,OAEEkB,QAAQC,IAAInB,EAAQC,KAAKC,QAAQ4C,KAAKC,MAAMD,KAAKE,SAAWhD,EAAQC,KAAKC,QAAQ+C,OAAS,KAC1FJ,EAAS7C,EAAQC,KAAKC,QACpB4C,KAAKC,MAAMD,KAAKE,SAAWhD,EAAQC,KAAKC,QAAQ+C,OAAS,KAJ7D,4CADc,uBAAC,WAAD,wBAQd9C,KACC,IAOD,yBAAQC,UAAU,SAChB8C,MAAO,CACLC,eAAgB,QAChBC,gBAAgB,mBAAD,OAxBP,wCAwBO,cACD9C,QADC,IACDA,OADC,EACDA,EAAOiB,cADN,eAGf8B,mBAAoB,iBANxB,UASE,sBAAKjD,UAAU,kBAAf,UACE,oBAAIA,UAAU,eAAd,UAAmC,OAALE,QAAK,IAALA,OAAA,EAAAA,EAAOjB,SAAP,OAAgBiB,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAOG,QAAvB,OAA+BH,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAOgD,iBACpE,sBAAKlD,UAAU,iBAAf,UACE,wBAAQA,UAAU,gBAAlB,kBACA,wBAAQA,UAAU,gBAAlB,wBAEF,oBAAIA,UAAU,qBAAd,UApBYuC,EAoBgC,OAACrC,QAAD,IAACA,OAAD,EAACA,EAAOiD,SApBnCX,EAoB6C,IAnB3DD,GAAOA,EAAIM,OAASL,EAAID,EAAIa,OAAO,EAAGZ,EAAE,GAAK,MAAQD,QAqB1D,qBAAKvC,UAAU,0B,MClBNqD,MAtBf,WACE,MAA2BjE,oBAAS,GAApC,mBAAOkE,EAAP,KAAaC,EAAb,KAaA,OAXA9D,qBAAU,WAMR,OALA+D,OAAOC,iBAAiB,UAAU,WAC7BD,OAAOE,QAAU,IAClBH,GAAW,GACPA,GAAW,MAEZ,WACLC,OAAOG,oBAAoB,aAE5B,IAGD,sBAAK3D,UAAS,cAASsD,GAAQ,aAA/B,UACE,qBAAKtD,UAAU,WAAWiB,IAAI,4EAA4EG,IAAI,iBAC9G,qBAAKpB,UAAU,aAAaiB,IAAI,yFAAyFG,IAAI,iBCbpH,SAASwC,IACtB,OACE,sBAAK5D,UAAU,MAAf,UACE,cAAE,EAAF,IACA,cAAE,EAAF,IACA,cAAE,EAAF,CAAMf,MAAM,oBAAoBC,SAAU2C,EAASE,sBAAuB5C,YAAY,IACtF,cAAE,EAAF,CAAMF,MAAM,eAAeC,SAAU2C,EAASC,gBAC9C,cAAE,EAAF,CAAM7C,MAAM,YAAYC,SAAU2C,EAASG,gBAC3C,cAAE,EAAF,CAAM/C,MAAM,gBAAgBC,SAAU2C,EAASI,oBAC/C,cAAE,EAAF,CAAMhD,MAAM,gBAAgBC,SAAU2C,EAASK,oBAC/C,cAAE,EAAF,CAAMjD,MAAM,gBAAgBC,SAAU2C,EAASM,oBAC/C,cAAE,EAAF,CAAMlD,MAAM,kBAAkBC,SAAU2C,EAASO,qBACjD,cAAE,EAAF,CAAMnD,MAAM,gBAAgBC,SAAU2C,EAASQ,wBCfrDwB,IAASC,OAAO,cAAE,EAAF,IAAUC,SAASC,eAAe,W","file":"static/js/main.a8b36818.chunk.js","sourcesContent":["import axios from \"axios\";\n\n// base url\nconst instance = axios.create({\n  baseURL: \"https://api.themoviedb.org/3\"\n});\n\nexport default instance;","import React, {useState, useEffect} from 'react'\nimport axios from \"./axios\";\nimport \"./Row.css\";\nimport Youtube from \"react-youtube\";\nimport movieTrailer from \"movie-trailer\";\n\nconst baseUrl = \"https://image.tmdb.org/t/p/original/\";\n\nfunction Row({title, fetchUrl, isLargeRow}) {\n  let [movies, setMovies] = useState([]);\n  let [trailerUrl, setTrailerUrl] = useState();\n\n  // run this code whenever this component mounts\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    }\n    fetchData();\n  }, [fetchUrl]);\n\n  const opts = {\n    height: '390',\n    width: '100%',\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 1,\n    },\n  };\n\n  const handleClick = (movie) => {\n    if(trailerUrl) {\n      setTrailerUrl(false);\n    }else {\n      movieTrailer(movie?.name || movie?.title || \"\")\n      .then((url) => {\n        const urlParams = new URLSearchParams(new URL(url).search);\n        setTrailerUrl(urlParams.get('v'));\n      })\n      .catch((error) => console.log(error))\n    }\n  }\n\n  return (\n    <div className=\"row\">\n      <h2>{title}</h2>\n      <div className=\"row_posters\">\n        {\n          // display each movies \n          movies.map((movie) => {\n          return <img \n          key={movie.id} \n          onClick={() => handleClick(movie)} \n          className={`row_poster ${isLargeRow && \"row_posterLarge\"}`} src={!isLargeRow ? baseUrl+movie.backdrop_path : baseUrl+movie.poster_path} alt={movie.title || movie.name} />\n          })\n        }\n      </div>\n      {trailerUrl && < Youtube videoId={trailerUrl} opts={opts} /> }\n    </div>\n  )\n}\n\nexport default Row\n","const API_KEY = \"7d689ed7cab24730c8370165dec80da3\";\n\nconst requests = {\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_network=213`,\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n  fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`\n}\n\nexport default requests;","import React, {useState, useEffect} from 'react'\nimport axios from \"./axios\";\nimport requests from '../request';\nimport \"./Banner.css\";\n\nconst baseUrl = \"https://image.tmdb.org/t/p/original/\";\n\nfunction Banner() {\n  let [movie, setMovie] = useState([]);\n  \n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(requests.fetchNetflixOriginals);\n      console.log(request.data.results[Math.floor(Math.random() * request.data.results.length - 1)]);\n      setMovie(request.data.results[\n        Math.floor(Math.random() * request.data.results.length - 1)\n      ]);\n    }\n    fetchData();\n  }, []);\n\n  function truncate(str, n) {\n    return str && str.length > n ? str.substr(0, n-1) + \"...\" : str;\n  }\n\n  return (\n    <header className=\"banner\"\n      style={{\n        backgroundSize: \"cover\",\n        backgroundImage: `url(\n          ${baseUrl}${movie?.backdrop_path}\n        )`,\n        backgroundPosition: \"center center\"\n      }}\n    >\n      <div className=\"banner_contents\">\n        <h1 className=\"banner_title\">{movie?.title || movie?.name || movie?.original_name}</h1>\n        <div className=\"banner_buttons\">\n          <button className=\"banner_button\">Play</button>\n          <button className=\"banner_button\">My List</button>\n        </div>\n        <h2 className=\"banner_description\">{truncate(movie?.overview, 150)}</h2>\n      </div> \n      <div className=\"banner_fadeBottom\"></div>\n    </header>\n  )\n}\n\nexport default Banner\n","import React, {useState, useEffect} from 'react'\nimport \"./Nav.css\";\n\nfunction Nav() {\n  const [show, handleShow] = useState(false);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", () => {\n      if(window.scrollY > 100) {\n        handleShow(true);\n      }else handleShow(false);\n    });\n    return () => {\n      window.removeEventListener(\"scroll\");\n    }\n  }, []);\n\n  return (\n    <nav className={`nav ${show && \"nav_black\"}`}>\n      <img className=\"nav_logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\" alt=\"netflix_logo\" />\n      <img className=\"nav_avatar\" src=\"https://cdns.iconmonstr.com/wp-content/assets/preview/2013/240/iconmonstr-smiley-2.png\" alt=\"user_img\" />\n    </nav>\n  )\n}\n\nexport default Nav\n","import React from 'react'\nimport Row from './Row'\nimport requests from '../request'\nimport \"./App.css\";\nimport Banner from './Banner';\nimport Nav from './Nav';\n\nexport default function App() {\n  return (\n    <div className=\"app\">\n      < Nav />\n      < Banner />\n      < Row title=\"NETFLIX ORIGINALS\" fetchUrl={requests.fetchNetflixOriginals} isLargeRow={true}/>\n      < Row title=\"Trending Now\" fetchUrl={requests.fetchTrending}/>\n      < Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated}/>\n      < Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies}/>\n      < Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies}/>\n      < Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies}/>\n      < Row title=\"Romantic Movies\" fetchUrl={requests.fetchRomanceMovies}/>\n      < Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries}/>\n    </div>\n  )\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(< App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}